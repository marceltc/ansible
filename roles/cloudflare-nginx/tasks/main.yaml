# Role: cloudflare-nginx
# Installs an Nginx web server configured for Cloudflare Authenticated Origin Pulls with
# custom defined web directory (optional)

- name: Install the correct packages for RHEL (dnf)
  ansible.builtin.dnf:
    name:
      - nginx
    state: latest
  when: ansible_facts['os_family']|lower == 'redhat'

- name: Install the correct package for Debian-based (apt)
  ansible.builtin.apt:
    name:
      - nginx
    state: latest
  when: ansible_facts['os_family']|lower == 'debian'

- name: Install Cloudflare authenticated origin pull cert and origin public key
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /etc/ssl/certs/{{ item }}
    owner: root
    group: root
    mode: 0644
  with_items:
    - cloudflare_auth_origin_pull.crt
    - cloudflare_origin.crt

- name: Install origin private key
  ansible.builtin.copy:
    src: cloudflare_origin.key
    dest: /etc/ssl/private/cloudflare_origin.key
    owner: www-data
    group: www-data
    mode: 0600

- name: Install nginx configuration
  ansible.builtin.template:
    src: nginx_site.conf.j2
    dest: /etc/nginx/sites-available/{{ site.fqdn }}.conf
    owner: root
    group: root
    mode: 0644

- name: Enable nginx site configuration
  ansible.builtin.file:
    src: /etc/nginx/sites-available/{{ site.fqdn }}.conf
    dest: /etc/nginx/sites-enabled/{{ site.fqdn }}.conf
    state: link
    force: yes    # create if doesn't exist

- name: Disable default nginx site configuration
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Install webroot (default placeholder)
  ansible.builtin.template:
    src: default_index.html.j2
    dest: /var/www/{{ site.fqdn }}/index.html
    owner: www-data
    group: www-data
    mode: 0644
  when: "{{ copy_webroot }} == false"

- name: Install webroot (custom)
  ansible.builtin.copy:
    src: "{{ site.fqdn }}"
    dest: /var/www/{{ site.fqdn }}
    owner: www_data
    group: www_data
    directory_mode: 0755
    force: true
  when: "{{ copy_webroot }}"

- name: Enable and start nginx
  ansible.builtin.systemd_service:
    name: nginx
    enabled: true
    # To pick up any configuration changes
    state: restarted
    daemon_reload: true